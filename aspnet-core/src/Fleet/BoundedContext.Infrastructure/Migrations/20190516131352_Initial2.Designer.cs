// <auto-generated />
using System;
using BoundedContext.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoundedContext.Infrastructure.Migrations
{
    [DbContext(typeof(FleetDbContext))]
    [Migration("20190516131352_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BoundedContext.Domain.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<long?>("CreatorUserId");

                    b.Property<long?>("DeleterUserId");

                    b.Property<DateTime?>("DeletionTime");

                    b.Property<DateTime?>("ExtensionDate");

                    b.Property<int>("FuelId")
                        .HasColumnName("FuelId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime");

                    b.Property<long?>("LastModifierUserId");

                    b.Property<int?>("Odometer")
                        .HasColumnName("Odometer");

                    b.Property<DateTime?>("OutOfServiceDate");

                    b.Property<int>("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Vehicles","Fleet");
                });

            modelBuilder.Entity("BoundedContext.Domain.Vehicle", b =>
                {
                    b.OwnsOne("BoundedContext.Domain.ValueObjects.VehicleLocation", "LocationInfo", b1 =>
                        {
                            b1.Property<int>("VehicleId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("CurrentLocationId")
                                .HasColumnName("CurrentLocationId");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles","Fleet");

                            b1.HasOne("BoundedContext.Domain.Vehicle")
                                .WithOne("LocationInfo")
                                .HasForeignKey("BoundedContext.Domain.ValueObjects.VehicleLocation", "VehicleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("BoundedContext.Domain.ValueObjects.VehicleManufacturingInfo", "VehicleManufacturingInfo", b1 =>
                        {
                            b1.Property<int>("VehicleId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("ChassisNo")
                                .IsRequired()
                                .HasColumnName("ChassisNo");

                            b1.Property<int>("ModelId")
                                .HasColumnName("ModelId");

                            b1.Property<int>("Year")
                                .HasColumnName("Year");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles","Fleet");

                            b1.HasOne("BoundedContext.Domain.Vehicle")
                                .WithOne("VehicleManufacturingInfo")
                                .HasForeignKey("BoundedContext.Domain.ValueObjects.VehicleManufacturingInfo", "VehicleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("BoundedContext.Domain.ValueObjects.VehiclePurchaseInfo", "PurchaseInfo", b1 =>
                        {
                            b1.Property<int>("VehicleId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime>("Date")
                                .HasColumnName("PurchaseDate");

                            b1.Property<decimal?>("Price")
                                .HasColumnName("PurchasePrice")
                                .HasColumnType("decimal(19,4)");

                            b1.Property<Guid>("VendorId")
                                .HasColumnName("VendorId");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles","Fleet");

                            b1.HasOne("BoundedContext.Domain.Vehicle")
                                .WithOne("PurchaseInfo")
                                .HasForeignKey("BoundedContext.Domain.ValueObjects.VehiclePurchaseInfo", "VehicleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("BoundedContext.Domain.ValueObjects.VehicleSpecs", "Specs", b1 =>
                        {
                            b1.Property<int>("VehicleId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<long>("ColorId")
                                .HasColumnName("ColorId");

                            b1.Property<int?>("EngineSize")
                                .HasColumnName("EngineSize");

                            b1.Property<int>("FuelTankSize")
                                .HasColumnName("FuelTankSize");

                            b1.Property<int>("FuelTypeId")
                                .HasColumnName("FuelTypeId");

                            b1.Property<long>("TrimLevelId")
                                .HasColumnName("TrimLevelId");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles","Fleet");

                            b1.HasOne("BoundedContext.Domain.Vehicle")
                                .WithOne("Specs")
                                .HasForeignKey("BoundedContext.Domain.ValueObjects.VehicleSpecs", "VehicleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("BoundedContext.Domain.ValueObjects.VehicleStatus", "Status", b1 =>
                        {
                            b1.Property<int>("VehicleId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<long>("StatusId")
                                .HasColumnName("StatusId");

                            b1.Property<string>("_additionalStatuses")
                                .HasColumnName("AdditionalStatuses");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles","Fleet");

                            b1.HasOne("BoundedContext.Domain.Vehicle")
                                .WithOne("Status")
                                .HasForeignKey("BoundedContext.Domain.ValueObjects.VehicleStatus", "VehicleId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
